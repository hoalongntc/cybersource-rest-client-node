{{>licenseInfo}}
import ApiClient, { ApiCallback } from '../packages/cybersource-typescript-node/src/ApiClient';
import MerchantConfig from '../packages/cybersource-typescript-node/src/authentication/core/MerchantConfig';

// ===============================================
// This file is autogenerated - Please do not edit
// ===============================================


{{#models}}
{{#model}}
{{#description}}
/**
* {{{description}}}
*/
{{/description}}
export class {{classname}} {{#parent}}extends {{{parent}}} {{/parent}}{
    constructor() {};

{{#vars}}
{{#description}}
    /**
    * {{{description}}}
    */
{{/description}}
    '{{name}}'{{^required}}?{{/required}}: {{#isEnum}}{{{datatypeWithEnum}}}{{/isEnum}}{{^isEnum}}{{{datatype}}}{{/isEnum}};
{{/vars}}

    {{^isArrayModel}}
    static constructFromObject(data: Partial<{{classname}}>, obj?: {{classname}}): {{classname}} {
        return new {{classname}}();
    }
    {{/isArrayModel}}    
}

{{#hasEnums}}
export namespace {{classname}} {
{{#vars}}
{{#isEnum}}
    export enum {{enumName}} {
        {{#allowableValues}}
        {{#enumVars}}
        {{name}} = <any> {{{value}}}{{^-last}},{{/-last}}
        {{/enumVars}}
        {{/allowableValues}}
    }
{{/isEnum}}
{{/vars}}
}
{{/hasEnums}}
{{/model}}
{{/models}}

{{#apiInfo}}
{{#apis}}
{{#operations}}
{{#description}}
/**
* {{&description}}
*/
{{/description}}
export class {{classname}} {
    apiClient: ApiClient;

    constructor(config: MerchantConfig, apiClient?: ApiClient) {
    }

{{#operation}}
    /**
     * {{&notes}}
     {{#summary}}
     * @summary {{&summary}}
     *
     {{/summary}}
     {{#allParams}}{{#required}}* @param {{=<% %>=}}{<%={{ }}=%>{{{dataType}}}{{=<% %>=}}}<%={{ }}=%> {{paramName}} {{description}}
     {{/required}}{{/allParams}}{{#hasOptionalParams}}* @param {Object} opts Optional parameters
     {{#allParams}}{{^required}}* @param {{=<% %>=}}{<%={{ }}=%>{{{dataType}}}{{=<% %>=}}}<%={{ }}=%> opts.{{paramName}} {{description}}{{#defaultValue}} (default to {{{defaultValue}}}){{/defaultValue}}
     {{/required}}{{/allParams}}*{{/hasOptionalParams}}
     */
    public {{nickname}} ({{#allParams}}{{#required}}{{paramName}}: {{{dataType}}}, {{/required}}{{/allParams}}{{#hasOptionalParams}}opts: {{=<% %>=}}{ <%={{ }}=%>{{#allParams}}{{^required}}{{paramName}}?: {{{dataType}}}; {{/required}}{{/allParams}}{{=<% %>=}} }<%={{ }}=%>, {{/hasOptionalParams}}callback: ApiCallback{{#returnType}}<{{{returnType}}}>{{/returnType}}) {
        const any = null;
        return this.apiClient.callApi{{#returnType}}<{{{returnType}}}>{{/returnType}}('', '', {}, {}, {}, {}, {}, [], [], [], {{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}null{{/returnType}}, callback);
    }
{{/operation}}
}
{{/operations}}
{{/apis}}
{{/apiInfo}}
